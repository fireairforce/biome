---
source: crates/biome_js_analyze/tests/spec_tests.rs
expression: issue4248.ts
---
# Input
```ts
import React from 'react';

type ExampleProps = {
	getData: () => string;
};

const ExampleComponent: React.FC<ExampleProps> = ({ getData }) => {
	const data = React.useMemo(getData, [getData]);
	return <span>{data}</span>;
};

```

# Diagnostics
```
issue4248.ts:8:21 lint/correctness/useExhaustiveDependencies ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! This hook specifies more dependencies than necessary: getData
  
     7 │ const ExampleComponent: React.FC<ExampleProps> = ({ getData }) => {
   > 8 │ 	const data = React.useMemo(getData, [getData]);
       │ 	                   ^^^^^^^
     9 │ 	return <span>{data}</span>;
    10 │ };
  
  i Outer scope values aren't valid dependencies because mutating them doesn't re-render the component.
  
     7 │ const ExampleComponent: React.FC<ExampleProps> = ({ getData }) => {
   > 8 │ 	const data = React.useMemo(getData, [getData]);
       │ 	                                     ^^^^^^^
     9 │ 	return <span>{data}</span>;
    10 │ };
  

```
